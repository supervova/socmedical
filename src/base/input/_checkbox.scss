// MARKUP

// label.form__check-label
//   //- Input element for the checkbox
//   input.form__check-input(type='checkbox')
//   //- Customization element for the checkbox
//   span.form__check-toggle

// Native
.form__check-input {
  filter: alpha(opacity=0);
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

// Pseudo element
.form__check-input ~ .form__check-toggle {
  border-radius: 50%;
  border: var(--size-border-width) solid var(--color-border-dark);
  cursor: pointer;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  width: ($size-space-1 * 2);
  height: ($size-space-1 * 2);
}

// Hover
.form__check-input:hover ~ .form__check-toggle {
  border-color: $color-brand-primary-base;
}

// Checked
.form__check-input:checked ~ .form__check-toggle {
  border-color: $color-brand-primary-base;
  background: $color-brand-primary-base var(--asset-data-image-check) center no-repeat;
}

// -----------------------------------------------------------------------------
// Animated round checkbox
// -----------------------------------------------------------------------------

$checkbox-size: 2.4rem;

.center,
%center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.form__checkbox {
  @extend %center;
  opacity: 0;
  pointer-events: none;

  + label {
    @extend %center;
    border-radius: 50%;
    transition: background .2s var(--motion-easing-base);
    width: $checkbox-size;
    height: $checkbox-size;

    &::after {
      border-radius: inherit;
      border: 2px solid #fff;
      box-shadow: 1px 1px 1px 1px hsla(143, 93%, 16%, .5);
      content: '';
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transition: border-width .2s var(--motion-easing-base);
    }
  }

  &:checked + label {
    background-color: hsl(300, 100%, 25%);
    &::after {
      border-width: 7px;
    }
  }
}

// Animated rays

$rays-distance: 1.8rem;
$rays-height: 2rem;
$rays-offset: 2rem;

.expression-lines {
  $lines: 4;

  bottom: $rays-distance;
  opacity: 0;
  transform-origin: center $rays-height + $rays-distance;
  height: $rays-height;

  &::before,
  &::after {
    bottom: 0;
    transform-origin: center calc(100% + #{$rays-distance});
    height: 100%;
  }

  &,
  &::before,
  &::after {
    background-color: #fff;
    content: '';
    position: absolute;
    width: 1px;
  }

  &::before {
    transform: rotate(30deg);
  }

  &::after {
    transform: rotate(60deg);
  }

  @for $i from 1 through $lines {
    &:nth-of-type(#{$i}) {
      transform: rotate(360deg / $lines * $i);
    }
  }
}

$rays-offset: 2rem;

.form__checkbox:checked ~ .expression-lines {
  animation: spring .4s ease forwards;

  &::before,
  &::after {
    animation: move-origin .4s ease forwards;
  }
}

@keyframes move-origin {
  100% {
    transform-origin: center $rays-height + $rays-distance + $rays-offset;
  }
}

@keyframes spring {
  0% {
    opacity: 1;
    transform-origin: center $rays-distance;
    height: 0;
  }
  100% {
    bottom: $rays-distance + $rays-offset;
    transform-origin: center $rays-height + $rays-distance + $rays-offset;
    height: $rays-height;
  }
}
